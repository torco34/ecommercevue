{"version":3,"file":"js/85.7f75415a.js","mappings":"8HAGA,MAAMA,EAAU,kCAEhB,MAAMC,EAEJ,cAAMC,GACJ,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAIL,GACjC,OAAOG,EAASG,IAClB,CAAE,MAAOC,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAEA,eAAME,CAAUC,GACd,MAAMP,QAAiBC,EAAAA,EAAMC,IAAI,GAAGL,KAAWU,KAE/C,OADAF,QAAQG,IAAIR,EAASG,KAAM,oBACpBH,EAASG,IAClB,EAGF,QAAmBL,C,wzBC+BnB,MAAMW,GAAQC,EAAAA,EAAAA,MACRC,GAAQC,EAAAA,EAAAA,MACRC,GAAQC,EAAAA,EAAAA,MAERC,EAASN,EAAMO,OAAOT,GAEtBU,GAAOC,EAAAA,EAAAA,IAAI,MACXC,GAAeD,EAAAA,EAAAA,IAAI,MAEnBE,GAAQF,EAAAA,EAAAA,IAAI,CAAC,IAAK,IAAK,IAAK,OAC5BG,EAAYC,UAChB,IACE,MAAMtB,QAAiBF,EAAAA,EAAYQ,UAAUS,GAC7CV,QAAQG,IAAIO,GACZE,EAAKM,MAAQvB,CACf,CAAE,MAAOI,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGIoB,EAAcC,IAClBN,EAAaI,MAAQE,CAAI,EAGrBC,EAAYA,KAEhB,IAAKP,EAAaI,MAIhB,YAHAV,EAAMT,MAAM,mCAAoC,CAC9CuB,eAAgB,gBAKpB,MAAMC,EAAe,IAChBX,EAAKM,MACRE,KAAMN,EAAaI,MACnBM,SAAU,GAEZlB,EAAMmB,SAAS,YAAaF,GAC5Bf,EAAMkB,QAAQ,6CAA6C,E,OAG7DC,EAAAA,EAAAA,IAAUX,G,qgCC3FV,MAAMY,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://ecommerce/./src/service/PostService.js","webpack://ecommerce/./src/components/CartPreview.vue","webpack://ecommerce/./src/components/CartPreview.vue?5029"],"sourcesContent":["// src/service/PostService.js\nimport axios from \"axios\";\n\nconst API_URL = \"http://localhost:3000/api/items\";\n\nclass PostService {\n  // Método para obtener todos los ítems\n  async fetchAll() {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error al obtener los ítems:\", error);\n      throw error;\n    }\n  }\n\n  async fetchById(id) {\n    const response = await axios.get(`${API_URL}/${id}`);\n    console.log(response.data, \"rolktrlg service\");\n    return response.data;\n  }\n}\n\nexport default new PostService();\n","<template>\n  <div>\n    <h2 class=\"p-3 mt-5 fw-bold display-4 containerPreview text-center\">\n      COMPOSICIÓN, CUIDADOS y ORIGEN\n    </h2>\n   <div class=\"container\">\n    <BreadCrumbsNav/>\n   </div>\n    \n    <div class=\"container mt-5 rounded fondoCard d-md-flex flex-md-row flex-column gap-5\">\n   \n      <div class=\"flex-grow-1\">\n        <div v-if=\"item\">\n          <CustomCard :name=\"item.name\" :imageUrl=\"item.imageUrl\" :description=\"item.description\" :price=\"item.price\"\n            :showButton=\"false\" />\n        </div>\n        <div v-else>\n          <p>Cargando...</p>\n        </div>\n      </div>\n      <div class=\"borde p-5 d-grid gap-3 mx-md-2\">\n        <div>\n          <div>\n            <p class=\"fs-3 fw-bold\">Tallas</p>\n            <p v-for=\"size in sizes\" :key=\"size\" :class=\"[\n              'border p-2 co',\n              { 'selected-size': size === selectedSize },\n            ]\" @click=\"selectSize(size)\">\n              {{ size }}\n            </p>\n          </div>\n        </div>\n      </div>\n      <div class=\"p-5 d-grid justify-content-center\">\n        <h4 v-if=\"item\" class=\"fw-bold\">{{ item.name }}</h4>\n        <p v-if=\"item\">{{ item.description }}</p>\n        <p v-if=\"item\" class=\"fw-bold\">Precio:{{ item.price }}</p>\n     \n        <div>\n          <CustomButton @click=\"addToCart\"> Agregar al carrito </CustomButton>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRoute } from \"vue-router\";\nimport { useToast } from \"vue-toastification\";\nimport PostService from \"@/service/PostService\";\nimport CustomCard from \"@/components/CustomCard.vue\";\nimport CustomButton from \"@/components/CustomButton.vue\";\nimport BreadCrumbsNav from \"./BreadCrumbsNav.vue\"\nconst route = useRoute();\nconst store = useStore();\nconst toast = useToast();\n\nconst itemId = route.params.id;\n\nconst item = ref(null);\nconst selectedSize = ref(null);\n\nconst sizes = ref([\"L\", \"M\", \"S\", \"XL\"]);\nconst fetchItem = async () => {\n  try {\n    const response = await PostService.fetchById(itemId);\n    console.log(itemId)\n    item.value = response;\n  } catch (error) {\n    console.error(\"Error fetching item:\", error);\n  }\n};\n\nconst selectSize = (size) => {\n  selectedSize.value = size;\n};\n\nconst addToCart = () => {\n\n  if (!selectedSize.value) {\n    toast.error(\"Por favor, selecciona una talla.\", {\n      toastClassName: \"error-toast\",\n    });\n    return;\n  }\n\n  const productToAdd = {\n    ...item.value,\n    size: selectedSize.value,\n    quantity: 1,\n  };\n  store.dispatch(\"addToCart\", productToAdd);\n  toast.success(\"Producto agregado al carrito exitosamente!\");\n};\n\nonMounted(fetchItem);\n</script>\n\n<style lang=\"scss\" scoped>\n.containerPreview {\n  font-family: \"Roboto\", sans-serif;\n  color: $gray;\n}\n\n.lineaDercor {\n  color: red;\n}\n\n.fondoCard {\n  background-color: $beige;\n  padding: 20px;\n}\n\n.selected-size {\n  background-color: $blanco;\n  color: red;\n  cursor: pointer;\n}\n\n.co:hover {\n  background-color: $blanco;\n  color: red;\n  cursor: pointer;\n}\n\n.custom-toast {\n  background-color: red !important;\n  /* Cambia esto según tus necesidades */\n  color: #ffffff !important;\n}\n\n.error-toast {\n  background-color: red !important;\n  /* Color de fondo para errores */\n  color: white !important;\n  /* Color de texto para errores */\n}\n\n.custom-toast .Vue-Toastification__toast-body {\n  color: #ffffff;\n}\n</style>","import script from \"./CartPreview.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CartPreview.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CartPreview.vue?vue&type=style&index=0&id=26d3a0b0&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-26d3a0b0\"]])\n\nexport default __exports__"],"names":["API_URL","PostService","fetchAll","response","axios","get","data","error","console","fetchById","id","log","route","useRoute","store","useStore","toast","useToast","itemId","params","item","ref","selectedSize","sizes","fetchItem","async","value","selectSize","size","addToCart","toastClassName","productToAdd","quantity","dispatch","success","onMounted","__exports__"],"sourceRoot":""}